name: v2 Build Test Windows And OSX
on: workflow_dispatch

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build windows
        run: |
          RELEASE=$(curl --silent "https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "${RELEASE}"
          URL="https://github.com/yt-dlp/yt-dlp/releases/download/${RELEASE}/yt-dlp.exe"
          echo "${URL}"
          mvn -B package --file pom.xml
          unzip target/app.jar
          curl -o platform/windows/yt-dlp.exe "${URL}"
          cp -rf BOOT-INF/classes BOOT-INF/lib platform/windows/
          zip -r podcast2-win-x64.zip platform/windows/ 

      - name: Build osx
        run: |
          URL="https://github.com/yt-dlp/yt-dlp/releases/download/${RELEASE}/yt-dlp_macos_legacy"
          echo "${URL}"
          curl -o platform/osx/yt-dlp "URL"
          chmod a+x platform/osx/yt-dlp
          cp -rf BOOT-INF/classes BOOT-INF/lib platform/osx/
          zip -r podcast2-osx-x64.zip platform/osx/           

      # 获取 Maven 项目版本
      - name: Get Maven Project Version
        id: get_version
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}-beta"
          prerelease: true
          title: "${{ env.RELEASE_VERSION }}"
          files: |
            podcast2-win-x64.zip
            podcast2-osx-x64.zip